package soundanaliser;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 * Klasa GUI, tworzy Graficzny Interfejs Użytkownika.
 * <p>
 * Jej głównym zadaniem jest wywoływanie metod z abstakcyjnej klasy DaneMiernika
 * <p>
 * oraz wyświetlaniem efektow na panelach.
 * 
 *
 *
*/
public class GUI extends javax.swing.JFrame {

    JFileChooser fc;
    File plik;
    Scanner in;
    public List <String> lista;
    public int dlugoscListy;
    
    /**
     * Inicjacja komponentów
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bAddFile = new javax.swing.JButton();
        bCheckFile = new javax.swing.JButton();
        bGenerate = new javax.swing.JButton();
        bExport = new javax.swing.JButton();
        bExit = new javax.swing.JButton();
        pTitle = new javax.swing.JPanel();
        lTitle = new javax.swing.JLabel();
        pInput = new javax.swing.JScrollPane();
        taInput = new javax.swing.JTextArea();
        pOutput = new javax.swing.JScrollPane();
        taOutput = new javax.swing.JTextArea();
        bPokaz = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        miAddFile = new javax.swing.JMenuItem();
        miSeparator = new javax.swing.JPopupMenu.Separator();
        miExit = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SoundAnaliser");

        bAddFile.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        bAddFile.setText("Dodaj plik");
        bAddFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddFileActionPerformed(evt);
            }
        });

        bCheckFile.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        bCheckFile.setText("Sprawdz dane");
        bCheckFile.setEnabled(false);
        bCheckFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCheckFileActionPerformed(evt);
            }
        });

        bGenerate.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        bGenerate.setText("Generuj dane");
        bGenerate.setEnabled(false);
        bGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bGenerateActionPerformed(evt);
            }
        });

        bExport.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        bExport.setText("Eksportuj do CSV");
        bExport.setEnabled(false);
        bExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bExportActionPerformed(evt);
            }
        });

        bExit.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        bExit.setText("Exit");
        bExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bExitActionPerformed(evt);
            }
        });

        pTitle.setBackground(new java.awt.Color(220, 220, 220));
        pTitle.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        lTitle.setFont(new java.awt.Font("Purisa", 2, 24)); // NOI18N
        lTitle.setText("Sound Analyzer");

        javax.swing.GroupLayout pTitleLayout = new javax.swing.GroupLayout(pTitle);
        pTitle.setLayout(pTitleLayout);
        pTitleLayout.setHorizontalGroup(
            pTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pTitleLayout.createSequentialGroup()
                .addGap(248, 248, 248)
                .addComponent(lTitle)
                .addContainerGap(250, Short.MAX_VALUE))
        );
        pTitleLayout.setVerticalGroup(
            pTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pTitleLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lTitle)
                .addContainerGap())
        );

        pInput.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        taInput.setEditable(false);
        taInput.setBackground(new java.awt.Color(240, 240, 240));
        taInput.setColumns(20);
        taInput.setRows(5);
        pInput.setViewportView(taInput);

        pOutput.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        taOutput.setEditable(false);
        taOutput.setBackground(new java.awt.Color(240, 240, 240));
        taOutput.setColumns(20);
        taOutput.setRows(5);
        pOutput.setViewportView(taOutput);

        bPokaz.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        bPokaz.setText("Pokaz raport");
        bPokaz.setEnabled(false);
        bPokaz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPokazActionPerformed(evt);
            }
        });

        jMenu1.setText("File");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        miAddFile.setText("Otworz");
        miAddFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miAddFileActionPerformed(evt);
            }
        });
        jMenu1.add(miAddFile);
        jMenu1.add(miSeparator);

        miExit.setText("Wyjscie");
        miExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miExitActionPerformed(evt);
            }
        });
        jMenu1.add(miExit);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pInput)
                            .addComponent(pOutput, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bGenerate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bPokaz, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bExport, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(bAddFile, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bCheckFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(bExit, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(pTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bAddFile, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bCheckFile, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(bGenerate, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pInput))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bPokaz, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bExport, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(bExit, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    /**
     * Wyjście z programu
     * @param evt 
     */
    
    private void bExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bExitActionPerformed
        System.exit(0);
        //      //
        // END  //
        //      //
    }//GEN-LAST:event_bExitActionPerformed

    /**
     * Wyjście z programu
     * @param evt 
     */
    
    private void miExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miExitActionPerformed
        System.exit(0);
        //      //
        // END  //
        //      //
    }//GEN-LAST:event_miExitActionPerformed

    /**
     * Tworzy obiekt klasy JFileChooser pozwalający użytkownikowi wskazać plik do wczytania
     * <p>Wypisuje zawartosc pliku do panelu taInput
     * <p>Dzieli dane na wersy
     * <p>Przydziela wersy do kolejnych elementów Listy
     * @param evt 
     */
    
    private void bAddFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddFileActionPerformed

        fc = new JFileChooser();
        if(fc.showOpenDialog(null) == JFileChooser.APPROVE_OPTION)
        {
            plik = fc.getSelectedFile();

            try{in = new Scanner(plik);}
                catch (FileNotFoundException ex){Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);}
            wypiszNaPanelu(in);
            in.close();
            
            try{in = new Scanner(plik);}
                catch (FileNotFoundException ex){Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);}
            dodajDoTablicyDanych(in);
            in.close();
            DaneMiernika.PobierzTablice(lista, dlugoscListy);
            JOptionPane.showMessageDialog(null, "Załadowano plik: " + plik.getName());
            bCheckFile.setEnabled(true);
            
            
        }
        else
        {
            fc.setEnabled(false);
        }
        
    }//GEN-LAST:event_bAddFileActionPerformed

    /**
     * Eksportuje wygenerowane dane do pliku
     * @param evt 
     */
    
    private void bExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bExportActionPerformed
        try {
            DaneMiernika.MainExportCode();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bExportActionPerformed

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu1ActionPerformed
    /**
    * Wykonuje wywołanie funkcji "Dodajplik"
    * @param evt 
    */
    private void miAddFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miAddFileActionPerformed
        bAddFile.doClick();
    }//GEN-LAST:event_miAddFileActionPerformed

    /**
     * Generowanie danych otrzymanych po procesie sprawdzenia danych
     * @param evt 
     */
    private void bGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bGenerateActionPerformed
        DaneMiernika.MainGenerateCode();
        JOptionPane.showMessageDialog(null, "Dane wygenerowano." + '\n' + "Teraz można przejść do raportów.");
        bExport.setEnabled(true);
        bPokaz.setEnabled(true);
    }//GEN-LAST:event_bGenerateActionPerformed

    /**
     * Sprawdzenie danych pod kątem poprawności formatu i semantyki danych
     * @param evt 
     */
    private void bCheckFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCheckFileActionPerformed
        DaneMiernika.MainCheckCode();
        if(DaneMiernika.valid == true){
        bGenerate.setEnabled(true);}
        else
        {
            bGenerate.setEnabled(false);
            bCheckFile.setEnabled(false);
            bPokaz.setEnabled(false);
            bExport.setEnabled(false);
        }
        
    }//GEN-LAST:event_bCheckFileActionPerformed

    private void bPokazActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPokazActionPerformed
        DaneMiernika.WypiszNaPanelu();
    }//GEN-LAST:event_bPokazActionPerformed
    /**
    * Główna metoda klasy GUI, 
    * 
    * @param args 
    */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAddFile;
    private javax.swing.JButton bCheckFile;
    private javax.swing.JButton bExit;
    private javax.swing.JButton bExport;
    private javax.swing.JButton bGenerate;
    private javax.swing.JButton bPokaz;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JLabel lTitle;
    private javax.swing.JMenuItem miAddFile;
    private javax.swing.JMenuItem miExit;
    private javax.swing.JPopupMenu.Separator miSeparator;
    private javax.swing.JScrollPane pInput;
    private javax.swing.JScrollPane pOutput;
    private javax.swing.JPanel pTitle;
    private javax.swing.JTextArea taInput;
    public static javax.swing.JTextArea taOutput;
    // End of variables declaration//GEN-END:variables
    /**
     * Nieużywana funkcja pozwalająca wypisać w konsoli zawartość pliku
     * @param in 
     */
    private void wypiszNaKonsoli(Scanner in) {
        while(in.hasNext()){
            System.out.println(in.nextLine());
        }
    }
    /**
     * Nieużywana funkcja pozwalająca wypisać w konsoli zawartość pliku
     * @param in 
     */
    private void zapisz(Scanner in) {
        while(in.hasNext()){
            System.out.println(in.nextLine());
        }
    }

    private void wypiszNaPanelu(Scanner in) {
        taInput.setEditable(true);                                              // Rozpoczecie procesu
        
//        taInput.setText("Wczytany plik: " + '\n');
        taInput.setText("");                                                    // Czyszczenie pola tekstowego
        while(in.hasNext())
        {
//          taInput.setText(taInput.getText() + '\n' + in.nextLine());          // Pierwsza wersja
            taInput.append(in.nextLine() + '\n');                               // Druga wersja
        }
        taInput.setEditable(false);                                             // Zakonczenie procesu
    }
/**
 * Dodaje dane z pliku do Listy
 * @param in 
 */
    private void dodajDoTablicyDanych(Scanner in) {
        lista = new ArrayList();
        while(in.hasNext())
        {
            lista.add(in.nextLine());
        }
        dlugoscListy = lista.size();
    }
}
